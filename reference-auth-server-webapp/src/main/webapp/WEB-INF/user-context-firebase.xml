<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015 The MITRE Corporation
    and the MIT Kerberos and Internet Trust Consortium

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="firebaseUserInfoRepository" primary="true"
          class="org.hspconsortium.platform.authorization.repository.impl.FirebaseUserInfoRepository">
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="firebaseJwtAuthProvider"/>
    </security:authentication-manager>

    <bean id="firebaseJwtAuthProvider" class="org.hspconsortium.platform.authorization.security.FirebaseJwtAuthenticationProvider"/>

    <bean id="firebaseJwtAuthEntryPoint" class="org.hspconsortium.platform.authorization.security.FirebaseJwtLoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="${hspc.platform.accountLoginPage}"/>
        <constructor-arg name="baseUrl" value="${oidc.issuer}"/>
    </bean>

    <security:http pattern="/logout/**" security="none"/>

    <security:http authentication-manager-ref="authenticationManager" create-session="stateless" use-expressions="true" entry-point-ref="firebaseJwtAuthEntryPoint" >
        <security:intercept-url pattern="/**" access="permitAll"/>
        <security:custom-filter ref="authRequestFilter" after="SECURITY_CONTEXT_FILTER" />
        <security:custom-filter ref="customApiSecurityFilter" before="PRE_AUTH_FILTER" />
        <security:anonymous />
        <security:expression-handler ref="oauthWebExpressionHandler" />
        <security:headers>
            <security:frame-options policy="DENY" />
        </security:headers>
    </security:http>


    <bean id="customFilters" class="org.springframework.web.filter.CompositeFilter">
        <property name="filters">
            <list>
                <ref bean="authRequestFilter"/>
                <ref bean="customApiSecurityFilter"/>
            </list>
        </property>
    </bean>

    <bean id="firebaseTokenService" class="org.hspconsortium.platform.service.FirebaseTokenService"/>
    <bean id="encryptionService" class="org.hspconsortium.platform.service.EncryptionService"/>

</beans>
